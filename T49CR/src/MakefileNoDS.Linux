#################################################################################
#
# Makefile for Linux to produce libT49CR.so 
#
#################################################################################

###
# Name definitions
###
PREFIX     = ../
NAME       = T49CR
SHLIB      = $(PREFIX)lib/lib$(NAME).so

###
# Libraries
###
ROOTLIBS   = $(shell root-config --libs  | sed 's/-lpthread //')
ROOTGLIBS  = $(shell root-config --glibs | sed 's/-lpthread //') -lGX11 -lMinuit
T49DSTLIBS = -L$(T49DST_LIB) -lT49DST
LIBS       = $(ROOTGLIBS)  \
             $(T49DSTLIBS) 

###
# Contains the path to the include files
###
INCLUDE    = -I$(ROOTSYS)/include \
             -I$(CINTSYSDIR)      \
             -I$(T49)/inc         \
             -I$(T49DST)/inc      \
             -I$(T49ANA)/inc      \
             -I../inc  
           
INCDIR     = $(PREFIX)/inc
SRCDIR     = $(PREFIX)/src
VPATH      = $(SRCDIR) $(INCDIR) 

###
# Dictionary for class integration in ROOT (needed for CINT)
###
DICT       = $(NAME)Dict
LINKDEF    = $(NAME)LinkDef

###
# Compiler
###
CXX        = g++
LD         = g++

###
# Flags
###
ROOTCFLAGS = $(shell root-config --cflags | sed 's/-pthread //') 
CXXFLAGS   = -O -Wall -m32
CXXFLAGS  += $(ROOTCFLAGS)
CXXFLAGS  += -DNODS
LDFLAGS    = -g

###
# Dependencies
###
SOURCES    = $(wildcard T49*.C)
OBJECTS    = $(filter-out $(DICT).o,$(SOURCES:.C=.o)) $(DICT).o
HEADER     = PhysConst.h       \
             T49CrDedx.h       \
             T49CrInfo.h       \
             T49CrIndex.h      \
             T49CrParticle.h      \
             T49CrContainer.h      \
             T49CrMixer.h      \
             T49CrSdynFit.h      \
             T49CRLinkDef.h

###
# Target definitions
###
.PHONY: all clean 

all: 	
	$(MAKE) -f MakefileNoDS.Linux $(SHLIB)

$(SHLIB): $(OBJECTS) $(HEADER)
	$(CXX) -m32 -shared -o $(SHLIB) $(OBJECTS) 

$(DICT).C: $(HEADER)
	@echo "Generating dictionary $(NAME)Dict.C"
	$(ROOTSYS)/bin/rootcint -f $(DICT).C -c $(INCLUDE) $(HEADER)

clean:
	rm -f $(OBJECTS) *Dict.* $(SHLIB) core *~

.c.o:
	cc $(CFLAGS) $(ANSI) $(INCLUDE) -c  $*.c

.cpp.o:
	$(CXX)   $(CXXFLAGS) $(INCLUDE) -c  $*.C

.C.o:
	$(CXX)   $(CXXFLAGS) $(INCLUDE) -c  $*.C

.cc.o:
	$(CXX)   $(CXXFLAGS) $(INCLUDE) -c  $*.cc

.f.o:
	$(FF)    $(FFLAGS)   $(INCLUDE) -c  $*.f











